import type { Parameters } from '$lib/docs';
import { titleCase } from '$lib/utils';

import { INT_64_VARIABLES } from '$lib/constants';

export const typescriptCodeExample = (
	params: Parameters,
	multipleLocationsOrModels: boolean,
	numberOfLocations: number | string,
	numberOfModels: number,
	server: string,
	sdk_type: string,
	sdk_cache: number
) => {
	let c = `<div class="code-numbered"><pre class="javascript !pl-10 !py-6" style="background-color:var(--code-preview-background);color:var(--code-preview-foreground)"><code><span class="line"><span style="color:var(--code-preview-token-keyword-special);font-style:italic;">import</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span> fetchWeatherApi <span style="color:var(--code-preview-token-bracket)">}</span> </span><span style="color:var(--code-preview-token-keyword-special);font-style:italic;">from</span><span style="color:var(--code-preview-token-string-expression)"> 'openmeteo'</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> params</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span></span></span>`;
	for (const [key, param] of Object.entries(params)) {
		if (param.constructor === Array) {
			if (typeof param[0] === 'string') {
				c += `
<span class="line"><span style="color:var(--code-preview-token-string-key)">	<span style="color:var(--code-preview-token-punctuation-mark)">"</span>${key}<span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-punctuation-mark)">:</span> ${'<span style="color:var(--code-preview-token-bracket)">[<span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-string-expression)">' + param.join('</span><span style="color:var(--code-preview-token-punctuation-mark)">"</span><span style="color:var(--code-preview-token-punctuation-mark)">, <span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-string-expression)">') + '</span><span style="color:var(--code-preview-token-punctuation-mark)">"</span><span style="color:var(--code-preview-token-bracket)">]</span>'}<span style="color:var(--code-preview-token-punctuation-mark)">,</span>`;
			} else {
				c += `
<span class="line"><span style="color:var(--code-preview-token-string-key)">	<span style="color:var(--code-preview-token-punctuation-mark)">"</span>${key}<span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-punctuation-mark)">:</span><span style="color:var(--code-preview-token-constant)"> ${'<span style="color:var(--code-preview-token-bracket)">[</span>' + param.join('<span style="color:var(--code-preview-token-punctuation-mark)">, </span>') + '<span style="color:var(--code-preview-token-bracket)">]</span>'}</span><span style="color:var(--code-preview-token-punctuation-mark)">,</span></span>`;
			}
		} else if (typeof param === 'object') {
			// ???
		} else if (typeof param === 'string') {
			c += `
<span class="line"><span style="color:var(--code-preview-token-string-key)">	<span style="color:var(--code-preview-token-punctuation-mark)">"</span>${key}<span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-punctuation-mark)">:</span><span style="color:var(--code-preview-token-constant)"> ${'<span style="color:var(--code-preview-token-punctuation-mark)">"</span><span style="color:var(--code-preview-token-string-expression)">' + param + '</span><span style="color:var(--code-preview-token-punctuation-mark)">"</span>'}</span><span style="color:var(--code-preview-token-punctuation-mark)">,</span></span>`;
		} else {
			c += `
<span class="line"><span style="color:var(--code-preview-token-string-key)">	<span style="color:var(--code-preview-token-punctuation-mark)">"</span>${key}<span style="color:var(--code-preview-token-punctuation-mark)">"</span></span><span style="color:var(--code-preview-token-punctuation-mark)">:</span><span style="color:var(--code-preview-token-constant)"> ${param}</span><span style="color:var(--code-preview-token-punctuation-mark)">,</span></span>`;
		}
	}
	c += `
<span class="line"><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-bracket)">}</span><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> url</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-string-expression)"> "${server}"</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> responses</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-keyword-special);font-style:italic;"> await</span><span style="color:var(--code-preview-token-function)"> fetchWeatherApi</span><span style="color:var(--code-preview-foreground)">(url</span><span style="color:var(--code-preview-token-punctuation)">,</span><span style="color:var(--code-preview-foreground)"> params)<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>`;
	if (multipleLocationsOrModels) {
		c +=
			`
<span class="line"><span style="color:var(--code-preview-token-comment);font-style:italic"># Process ` +
			(numberOfLocations ? `${numberOfLocations} locations` : '1 location') +
			(numberOfModels ? ` and ${numberOfModels} models` : '') +
			`</span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword-special);font-style:italic">for </span><span style="color:var(--code-preview-foreground)">response </span><span style="color:var(--code-preview-token-keyword-special);font-style:italic">in</span><span style="color:var(--code-preview-foreground)"> responses</span><span style="color:var(--code-preview-token-punctuation-mark)">:</span></span>`;
	} else {
		c += `
<span class="line"><span style="color:var(--code-preview-token-comment)">// Process first location. Add a for-loop for multiple locations or weather models</span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> response</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-foreground)"> responses[</span><span style="color:var(--code-preview-token-constant)">0</span><span style="color:var(--code-preview-foreground)">]<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>`;
	}

	c += `
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-comment)">// Attributes for timezone and location</span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> utcOffsetSeconds</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.utcOffsetSeconds</span><span style="color:var(--code-preview-foreground)">()<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> timezone</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.timezone</span><span style="color:var(--code-preview-foreground)">()<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> timezoneAbbreviation</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.timezoneAbbreviation</span><span style="color:var(--code-preview-foreground)">()<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> latitude</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.latitude</span><span style="color:var(--code-preview-foreground)">()<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> longitude</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.longitude</span><span style="color:var(--code-preview-foreground)">()<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> current</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.current</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> hourly</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.hourly</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> daily</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> response</span><span style="color:var(--code-preview-token-function)">.daily</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> sunrise</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-token-constant)"> daily</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">1</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-comment)">// Note: The order of weather variables in the URL query and the indices below need to match!</span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword)">const</span><span style="color:var(--code-preview-token-variable)"> weatherData</span><span style="color:var(--code-preview-token-keyword)"> =</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	current</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		time</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-keyword)"> new</span><span style="color:var(--code-preview-token-function)"> Date</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">current</span><span style="color:var(--code-preview-token-function)">.time</span><span style="color:var(--code-preview-foreground)">()) </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> utcOffsetSeconds) </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> 1000</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		temperature2m</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-constant)"> current</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">0</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-function)">.value</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		precipitation</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-constant)"> current</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">1</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-function)">.value</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	<span style="color:var(--code-preview-token-bracket)">}</span></span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	hourly</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		time</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> [</span><span style="color:var(--code-preview-token-keyword)">...</span><span style="color:var(--code-preview-token-function)">Array</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">hourly</span><span style="color:var(--code-preview-token-function)">.timeEnd</span><span style="color:var(--code-preview-foreground)">()) </span><span style="color:var(--code-preview-token-keyword)">-</span><span style="color:var(--code-preview-token-function)"> Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">hourly</span><span style="color:var(--code-preview-token-function)">.time</span><span style="color:var(--code-preview-foreground)">())) </span><span style="color:var(--code-preview-token-keyword)">/</span><span style="color:var(--code-preview-token-constant)"> hourly</span><span style="color:var(--code-preview-token-function)">.interval</span><span style="color:var(--code-preview-foreground)">())]</span><span style="color:var(--code-preview-token-function)">.map</span><span style="color:var(--code-preview-foreground)">(</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">			(_</span><span style="color:var(--code-preview-token-punctuation)">,</span><span style="color:var(--code-preview-foreground)"> i) </span><span style="color:var(--code-preview-token-keyword)">=&gt<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span><span style="color:var(--code-preview-token-keyword)"> new</span><span style="color:var(--code-preview-token-function)"> Date</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">hourly</span><span style="color:var(--code-preview-token-function)">.time</span><span style="color:var(--code-preview-foreground)">()) </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> i </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> hourly</span><span style="color:var(--code-preview-token-function)">.interval</span><span style="color:var(--code-preview-foreground)">() </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> utcOffsetSeconds) </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> 1000</span><span style="color:var(--code-preview-foreground)">)</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		)</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		temperature2m</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-constant)"> hourly</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">0</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-function)">.valuesArray</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		weatherCode</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-constant)"> hourly</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">1</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-function)">.valuesArray</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	<span style="color:var(--code-preview-token-bracket)">}</span></span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	daily</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		time</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> [</span><span style="color:var(--code-preview-token-keyword)">...</span><span style="color:var(--code-preview-token-function)">Array</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">daily</span><span style="color:var(--code-preview-token-function)">.timeEnd</span><span style="color:var(--code-preview-foreground)">()) </span><span style="color:var(--code-preview-token-keyword)">-</span><span style="color:var(--code-preview-token-function)"> Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">daily</span><span style="color:var(--code-preview-token-function)">.time</span><span style="color:var(--code-preview-foreground)">())) </span><span style="color:var(--code-preview-token-keyword)">/</span><span style="color:var(--code-preview-token-constant)"> daily</span><span style="color:var(--code-preview-token-function)">.interval</span><span style="color:var(--code-preview-foreground)">())]</span><span style="color:var(--code-preview-token-function)">.map</span><span style="color:var(--code-preview-foreground)">(</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">			(_</span><span style="color:var(--code-preview-token-punctuation)">,</span><span style="color:var(--code-preview-foreground)"> i) </span><span style="color:var(--code-preview-token-keyword)">=&gt<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span><span style="color:var(--code-preview-token-keyword)"> new</span><span style="color:var(--code-preview-token-function)"> Date</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">daily</span><span style="color:var(--code-preview-token-function)">.time</span><span style="color:var(--code-preview-foreground)">()) </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> i </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> daily</span><span style="color:var(--code-preview-token-function)">.interval</span><span style="color:var(--code-preview-foreground)">() </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> utcOffsetSeconds) </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> 1000</span><span style="color:var(--code-preview-foreground)">)</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		)</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		weatherCode</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-token-constant)"> daily</span><span style="color:var(--code-preview-token-function)">.variables</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">0</span><span style="color:var(--code-preview-foreground)">)</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-function)">.valuesArray</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-keyword)">!</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		sunrise</span><span style="color:var(--code-preview-token-keyword)">:</span><span style="color:var(--code-preview-foreground)"> [</span><span style="color:var(--code-preview-token-keyword)">...</span><span style="color:var(--code-preview-token-function)">Array</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">sunrise</span><span style="color:var(--code-preview-token-function)">.valuesInt64Length</span><span style="color:var(--code-preview-foreground)">())]</span><span style="color:var(--code-preview-token-function)">.map</span><span style="color:var(--code-preview-foreground)">(</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">			(_</span><span style="color:var(--code-preview-token-punctuation)">,</span><span style="color:var(--code-preview-foreground)"> i) </span><span style="color:var(--code-preview-token-keyword)">=&gt<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span><span style="color:var(--code-preview-token-keyword)"> new</span><span style="color:var(--code-preview-token-function)"> Date</span><span style="color:var(--code-preview-foreground)">((</span><span style="color:var(--code-preview-token-function)">Number</span><span style="color:var(--code-preview-foreground)">(</span><span style="color:var(--code-preview-token-constant)">sunrise</span><span style="color:var(--code-preview-token-function)">.valuesInt64</span><span style="color:var(--code-preview-foreground)">(i)) </span><span style="color:var(--code-preview-token-keyword)">+</span><span style="color:var(--code-preview-foreground)"> utcOffsetSeconds) </span><span style="color:var(--code-preview-token-keyword)">*</span><span style="color:var(--code-preview-token-constant)"> 1000</span><span style="color:var(--code-preview-foreground)">)</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">		)</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	<span style="color:var(--code-preview-token-bracket)">}</span></span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-bracket)">}</span><span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--code-preview-token-comment)">// 'weatherData' now contains a simple structure with arrays for datetime and weather data</span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword-special);font-style:italic;">for</span><span style="color:var(--code-preview-foreground)"> (</span><span style="color:var(--code-preview-token-keyword)">let</span><span style="color:var(--code-preview-foreground)"> i </span><span style="color:var(--code-preview-token-punctuation-mark)">=</span><span style="color:var(--code-preview-token-constant)"> 0</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span> i </span><span style="color:var(--code-preview-token-punctuation-mark)">&lt;</span><span style="color:var(--code-preview-token-variable)"> weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">hourly</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">time</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">length</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span> i</span><span style="color:var(--code-preview-token-punctuation-mark)">++</span><span style="color:var(--code-preview-foreground)">) <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">	console</span><span style="color:var(--code-preview-token-function)">.log</span><span style="color:var(--code-preview-foreground)">(</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">hourly</span><span style="color:var(--code-preview-foreground)">.time[i]</span><span style="color:var(--code-preview-token-function)">.toISOString</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">hourly</span><span style="color:var(--code-preview-foreground)">.temperature2m[i]</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">hourly</span><span style="color:var(--code-preview-foreground)">.weatherCode[i]</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	)<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-bracket)">}</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-keyword-special);font-style:italic;">for</span><span style="color:var(--code-preview-foreground)"> (</span><span style="color:var(--code-preview-token-keyword)">let</span><span style="color:var(--code-preview-foreground)"> i </span><span style="color:var(--code-preview-token-punctuation-mark)">=</span><span style="color:var(--code-preview-token-constant)"> 0</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span> i </span><span style="color:var(--code-preview-token-punctuation-mark)">&lt;</span><span style="color:var(--code-preview-token-variable)"> weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">daily</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">time</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">length</span><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-punctuation-mark)">;</span> i</span><span style="color:var(--code-preview-token-punctuation-mark)">++</span><span style="color:var(--code-preview-foreground)">) <span style="color:var(--code-preview-token-bracket)">{</span></span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">	console</span><span style="color:var(--code-preview-token-function)">.log</span><span style="color:var(--code-preview-foreground)">(</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">daily</span><span style="color:var(--code-preview-foreground)">.time[i]</span><span style="color:var(--code-preview-token-function)">.toISOString</span><span style="color:var(--code-preview-foreground)">()</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">daily</span><span style="color:var(--code-preview-foreground)">.weatherCode[i]</span><span style="color:var(--code-preview-token-punctuation)">,</span></span>
<span class="line"><span style="color:var(--code-preview-token-variable)">		weatherData</span><span style="color:var(--code-preview-foreground)">.</span><span style="color:var(--code-preview-token-variable)">daily</span><span style="color:var(--code-preview-foreground)">.sunrise[i]</span><span style="color:var(--code-preview-token-function)">.toISOString</span><span style="color:var(--code-preview-foreground)">()</span></span>
<span class="line"><span style="color:var(--code-preview-foreground)">	)<span style="color:var(--code-preview-token-punctuation-mark)">;</span></span></span>
<span class="line"><span style="color:var(--code-preview-foreground)"><span style="color:var(--code-preview-token-bracket)">}</span></span></span></code></pre></div>`;
	return c;
};
